1.  Pacific Atlantic Water Flow

class Solution:
    def pacificAtlantic(self, heights: List[List[int]]) -> List[List[int]]:
        m = len(heights) 
        n = len(heights[0])
        pacific_q = []
        atlantic_q = []
        for i in range(n) : 
            pacific_q.append((0 , i))
        for i in range(m) : 
            pacific_q.append((i , 0))
        for i in range(m) : 
            atlantic_q.append((i , n-1))
        for i in range(n) : 
            atlantic_q.append((m-1 , i))
        pacific_visited = set()
        atlantic_visited = set()
        def bfs(q , visited, heights):
            while q : 
                x , y  = q.pop() 
                visited.add((x , y ))
                dire = [[1 , 0] , [0 , 1] , [-1 , 0] , [0 , -1]]
                for dx , dy in dire : 
                    new_x , new_y = x + dx , y + dy 
                    if (new_x , new_y) not in visited and 0 <= new_x < m and 0 <= new_y < n and heights[new_x][new_y] >= heights[x][y]: 
                        q.append((new_x , new_y))
        bfs(pacific_q , pacific_visited , heights) 
        bfs(atlantic_q , atlantic_visited , heights)
        return list(pacific_visited & atlantic_visited)
